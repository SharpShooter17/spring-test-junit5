plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
}

ext.hamcrestVersion      = '1.3'
ext.jacksonVersion       = '2.9.5'
ext.jsonpathVersion      = '2.4.0'
ext.junitVersion         = '5.4.0'
ext.log4JVersion         = '2.11.1'
ext.servletApiVersion    = '3.1.0'
ext.springVersion        = '4.3.22.RELEASE'

repositories {
	mavenCentral()
}

dependencies {
	implementation platform("org.junit:junit-bom:${junitVersion}")

	compile("org.springframework:spring-context:${springVersion}")
	compile("org.springframework:spring-test:${springVersion}")
	compile("org.junit.jupiter:junit-jupiter-api")

	testCompile("org.springframework:spring-webmvc:${springVersion}")
	testCompile("javax.servlet:javax.servlet-api:${servletApiVersion}")
	testCompile("org.hamcrest:hamcrest-core:${hamcrestVersion}")
	testCompile("com.jayway.jsonpath:json-path:${jsonpathVersion}")
	testCompile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
	// Enable use of the JUnitPlatform Runner within the IDE
	testCompile("org.junit.platform:junit-platform-runner")

	testRuntime("org.junit.jupiter:junit-jupiter-engine")
	testRuntime("org.apache.logging.log4j:log4j-core:${log4JVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4JVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jcl:${log4JVersion}")
	testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4JVersion}")
}

compileJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}

test {
	useJUnitPlatform()
	testLogging.events "failed" // , "passed", "skipped", "standardOut", "standardError"
}

javadoc {
	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.author = true
	options.header = project.name
	options.addStringOption('Xdoclint:none', '-quiet')
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

jar {
	baseName = 'spring-test-junit5'
	version = project.version
}

group = 'org.springframework.test'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'spring-test-junit5'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Spring JUnit 5 Testing Support'
                description = 'Spring Framework 4.3.x support for JUnit Jupiter'
                url = 'https://github.com/sbrannen/spring-test-junit5'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sbrannen'
                        name = 'Sam Brannen'
                        email = 'sam@sambrannen.com'
                    }
                }
            }
        }
    }
}

wrapper {
	gradleVersion = '5.2'
}
